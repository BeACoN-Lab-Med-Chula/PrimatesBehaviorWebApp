# Generated by Django 5.0.7 on 2024-11-25 08:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FixationGameReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gamereportname', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Primates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_occupied', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RPiBoards',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_name', models.CharField(default='', max_length=255)),
                ('ip_address', models.GenericIPAddressField(protocol='IPv4')),
                ('ssid', models.CharField(blank=True, max_length=32, null=True)),
                ('ssid_password', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FixationGameResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('feedback', models.BooleanField()),
                ('feedbacktype', models.CharField(max_length=10)),
                ('buttonsize', models.FloatField()),
                ('fixationreport', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='PrimatesGameAPI.fixationgamereport')),
            ],
        ),
        migrations.CreateModel(
            name='GameInstances',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_hist', models.DateTimeField()),
                ('logout_hist', models.DateTimeField(blank=True, null=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gameconfig', to='PrimatesGameAPI.gameconfig')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='PrimatesGameAPI.games')),
                ('primate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='primate', to='PrimatesGameAPI.primates')),
                ('rpiboard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rpiboard', to='PrimatesGameAPI.rpiboards')),
            ],
        ),
        migrations.AddField(
            model_name='fixationgamereport',
            name='instance',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='fixationreportgameinstance', to='PrimatesGameAPI.gameinstances'),
        ),
        migrations.CreateModel(
            name='FixationGameConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_correct', models.IntegerField()),
                ('interval_incorrect', models.IntegerField()),
                ('interval_absent', models.IntegerField()),
                ('configtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='PrimatesGameAPI.gameconfig')),
                ('instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fixationgameinstance', to='PrimatesGameAPI.gameinstances')),
            ],
        ),
        migrations.AddField(
            model_name='gameconfig',
            name='gameid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PrimatesGameAPI.games'),
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportname', models.CharField(max_length=50)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='PrimatesGameAPI.games')),
            ],
        ),
        migrations.AddField(
            model_name='fixationgamereport',
            name='report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='PrimatesGameAPI.reports'),
        ),
        migrations.CreateModel(
            name='RPiStates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_occupied', models.BooleanField(default=False)),
                ('game_instance_running', models.IntegerField(blank=True, default=None, null=True)),
                ('start_game', models.BooleanField(default=False)),
                ('stop_game', models.BooleanField(default=False)),
                ('motor', models.BooleanField(default=False)),
                ('rpiboard', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='PrimatesGameAPI.rpiboards')),
            ],
        ),
    ]
